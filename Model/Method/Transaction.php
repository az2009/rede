<?php
/**
 * Jefferson Porto
 *
 * Do not edit this file if you want to update this module for future new versions.
 *
 * @category  Az2009
 * @package   Az2009_Cielo
 *
 * @copyright Copyright (c) 2018 Jefferson Porto - (https://www.linkedin.com/in/jeffersonbatistaporto/)
 *
 * @author    Jefferson Porto <jefferson.b.porto@gmail.com>
 */
namespace Az2009\Cielo\Model\Method;

abstract class Transaction extends \Az2009\Cielo\Model\Method\Response
{
    /**
     * @var array
     */
    protected $_transactionData = array();

    /**
     * @var \Magento\Customer\Model\Session
     */
    protected $_session;

    public function __construct(
        \Magento\Customer\Model\Session $session,
        \Magento\Sales\Model\Order\Email\Sender\OrderCommentSender $comment,
        array $data = []
    ) {
        $this->_session = $session;
        parent::__construct($data);
    }

    /**
     * Set body response to transaction of payment
     *
     * @param array $data
     */
    public function prepareBodyTransaction(Array $data, $key = '')
    {
        foreach ($data as $k => $v) {
            if (is_array($v)) {
                $this->prepareBodyTransaction($v, $k);
            } else {
                if (is_bool($v)) {
                    if ($v) {
                        $v = 'true';
                    } else {
                        $v = 'false';
                    }
                }

                $this->_transactionData[$key."_".$k] = $v;
            }
        }
    }

    /**
     * Get instance payment
     *
     * @return \Magento\Sales\Model\Order\Payment
     *
     * @throws \Az2009\Cielo\Exception\Cc
     */
    public function getPayment()
    {
        $payment = $this->getData('payment');
        if (!($payment instanceof \Magento\Payment\Model\InfoInterface)) {
            throw new \Az2009\Cielo\Exception\Cc(
                __('Occurred an error during payment process. Try Again.')
            );
        }

        return $payment;
    }

    /**
     * @return array
     */
    public function getTransactionData()
    {
        return $this->_transactionData;
    }

    /**
     * @param $bodyArray
     */
    public function addReturnMessageToTransaction($bodyArray)
    {
        $payment = $this->getPayment();
        if (isset($bodyArray['Payment']['ReturnMessage'])
            && $returnMessage = $bodyArray['Payment']['ReturnMessage']
        ) {
            $payment->addTransactionCommentsToOrder($payment->getTransactionId(), $returnMessage);
        }
    }
}